name: CI
on: [push]
jobs:
  unit_test_flutter:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.22.2
      - run: flutter --version

      - name: Run unit tests for Flutter plugin
        run: flutter test

      - name: Run unit tests for example app
        run: |
          cd example
          flutter test

  unit_test_android:
  runs-on: ubuntu-latest
  steps:
    - name: Clone repository
      uses: actions/checkout@v4
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.22.2
    - run: flutter --version

    - name: Accept Android SDK licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        mkdir -p example/android/licenses
        cp $ANDROID_HOME/licenses/* example/android/licenses/

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set Flutter SDK path
      run: echo "FLUTTER_HOME=${{ env.FLUTTER_ROOT }}" >> $GITHUB_ENV

    - name: Create local.properties
      run: |
        echo "sdk.dir=${{ env.ANDROID_HOME }}" > example/android/local.properties
        echo "flutter.sdk=${{ env.FLUTTER_HOME }}" >> example/android/local.properties
        echo "flutter.minSdkVersion=29" >> example/android/local.properties
        echo "flutter.compileSdkVersion=33" >> example/android/local.properties
        echo "flutter.targetSdkVersion=33" >> example/android/local.properties

    # Execute unit tests
    - name: Unit Test
      run: |
        cd example/android
        gradle wrapper
        ./gradlew testDebugUnitTest

    - name: Android Test Report
      uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }} # IMPORTANT: run Android Test Report regardless